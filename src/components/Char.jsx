/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/char-transformed.glb')
  const { actions } = useAnimations(animations, group)

  //used to play animation
  useEffect(() => {
    actions.Action.play()
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[-0.02, 2.32, 0]} rotation={[0, -Math.PI / 2, 0]}>
        <primitive object={nodes.Bone} />
        <skinnedMesh
          geometry={nodes['13648_Polo_Pants_v2_L3_1'].geometry}
          material={materials['13648PoloPants_button']}
          skeleton={nodes['13648_Polo_Pants_v2_L3_1'].skeleton}
        />
        <skinnedMesh
          geometry={nodes['13648_Polo_Pants_v2_L3_2'].geometry}
          material={nodes['13648_Polo_Pants_v2_L3_2'].material}
          skeleton={nodes['13648_Polo_Pants_v2_L3_2'].skeleton}
        />
        <skinnedMesh geometry={nodes.Cube.geometry} material={nodes.Cube.material} skeleton={nodes.Cube.skeleton} />
        <skinnedMesh geometry={nodes.Cube001.geometry} material={materials.MOUTH} skeleton={nodes.Cube001.skeleton} />
        <skinnedMesh
          geometry={nodes.Cube002.geometry}
          material={nodes.Cube002.material}
          skeleton={nodes.Cube002.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Cube002_1.geometry}
          material={materials.Mat_1}
          skeleton={nodes.Cube002_1.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Cube002_2.geometry}
          material={nodes.Cube002_2.material}
          skeleton={nodes.Cube002_2.skeleton}
        />
        <skinnedMesh
          geometry={nodes.ear001.geometry}
          material={nodes.ear001.material}
          skeleton={nodes.ear001.skeleton}
        />
        <skinnedMesh
          geometry={nodes.ear002.geometry}
          material={nodes.ear002.material}
          skeleton={nodes.ear002.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Hair001.geometry}
          material={nodes.Hair001.material}
          skeleton={nodes.Hair001.skeleton}
        />
        <skinnedMesh
          geometry={nodes.head_1.geometry}
          material={nodes.head_1.material}
          skeleton={nodes.head_1.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Sphere001.geometry}
          material={nodes.Sphere001.material}
          skeleton={nodes.Sphere001.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Sphere002.geometry}
          material={nodes.Sphere002.material}
          skeleton={nodes.Sphere002.skeleton}
        />
      </group>
      <mesh
        geometry={nodes.Sphere.geometry}
        material={nodes.Sphere.material}
        position={[-0.02, 2.32, 0]}
        scale={[3.27, 0.13, 3.27]}
      />
      <group position={[-0.02, 2.32, 0]} rotation={[0, -Math.PI / 2, 0]} scale={0.27}>
        <mesh geometry={nodes.Trainers_Cube025_1003.geometry} material={nodes.Trainers_Cube025_1003.material} />
        <mesh geometry={nodes.Trainers_Cube025_1003_1.geometry} material={nodes.Trainers_Cube025_1003_1.material} />
      </group>
      <group position={[-0.02, 2.32, 0]} rotation={[0, -Math.PI / 2, 0]} scale={[0.27, 0.27, -0.27]}>
        <mesh geometry={nodes.Trainers_Cube025_1001.geometry} material={nodes.Trainers_Cube025_1001.material} />
        <mesh geometry={nodes.Trainers_Cube025_1001_1.geometry} material={nodes.Trainers_Cube025_1001_1.material} />
      </group>
    </group>
  )
}

useGLTF.preload('/char-transformed.glb')
